<?xml version="1.0"?>
<launch>
   <!-- launch video stream -->
   <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="camera" />
        <!-- full path to the video file -->
        <!-- wget http://techslides.com/demos/sample-videos/small.mp4 -O /tmp/small.mp4 -->
        <arg name="video_stream_provider" value="/home/jotellybarros/Videos/MOVI0026.avi" />
        <!-- set camera fps to (video files not affected) -->
        <!-- <arg name="set_camera_fps" value="15"/> -->
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="1000" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <arg name="width" default="848"/>
		  <arg name="height" default="480"/>
        <!-- setting frame_id -->
        <arg name="frame_id" value="videofile_frame" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="camera_info_url" value="file:///$(find video_stream_opencv)/config/actionCam.yaml"/>
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- enable looping playback -->
        <arg name="loop_videofile" value="false" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="false" />
   </include>

   <!-- Filtro de imagem dehaze_underwater_image_ros -->
   <!-- <node pkg="dehaze_underwater_image_ros" type="dehaze_underwater_image_node" name="dehaze_underwater_image" output="screen">
        <param name="chessboard_square_size" value="0.036"/>
        <param name="debug" value="false"/>
        <param name="pixels_horizontal" value="640"/>
        <param name="pixels_vertical" value="480"/>
        <param name="fov_horizontal" value="1"/>
        <param name="fov_vertical" value="1"/>
        <remap from="image" to="/camera/image_raw"/>
    </node>

   <node pkg="image_view" type="image_view" name="image_view" >
      <remap from="image" to="/camera/image_raw" />
   </node> -->
   
</launch>
